{
  "version": "5",
  "$schema": "schema.json",
  "connectionSettings": {
    "connectionUri": {
      "variable": "CONNECTION_URI"
    },
    "poolSettings": {
      "maxConnections": 50,
      "poolTimeout": 30,
      "idleTimeout": 180,
      "checkConnectionAfterIdle": 60,
      "connectionLifetime": 600
    },
    "isolationLevel": "ReadCommitted"
  },
  "metadata": {
    "tables": {
      "Birds": {
        "schemaName": "public",
        "tableName": "Birds",
        "columns": {
          "ring_no": {
            "name": "ring_no",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "species_name": {
            "name": "species_name",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": null
          }
        },
        "uniquenessConstraints": {
          "Birds_pkey": [
            "ring_no"
          ]
        },
        "foreignRelations": {
          "Birds_species_name_fkey": {
            "foreignSchema": "public",
            "foreignTable": "Species",
            "columnMapping": {
              "species_name": "species_name"
            }
          }
        },
        "description": "@graphql({\"aggregate\": {\"enabled\": true}})"
      },
      "Encounters": {
        "schemaName": "public",
        "tableName": "Encounters",
        "columns": {
          "age": {
            "name": "age",
            "type": {
              "scalarType": "int2"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "breeding_condition": {
            "name": "breeding_condition",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": null
          },
          "capture_time": {
            "name": "capture_time",
            "type": {
              "scalarType": "time"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "extra_text": {
            "name": "extra_text",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": null
          },
          "is_juv": {
            "name": "is_juv",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": null
          },
          "moult_code": {
            "name": "moult_code",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": null
          },
          "old_greater_coverts": {
            "name": "old_greater_coverts",
            "type": {
              "scalarType": "int2"
            },
            "nullable": "nullable",
            "description": null
          },
          "record_type": {
            "name": "record_type",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "ring_no": {
            "name": "ring_no",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "scheme": {
            "name": "scheme",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "sex": {
            "name": "sex",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "sexing_method": {
            "name": "sexing_method",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": null
          },
          "visit_date": {
            "name": "visit_date",
            "type": {
              "scalarType": "date"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "weight": {
            "name": "weight",
            "type": {
              "scalarType": "float4"
            },
            "nullable": "nullable",
            "description": null
          },
          "wing_length": {
            "name": "wing_length",
            "type": {
              "scalarType": "int2"
            },
            "nullable": "nullable",
            "description": null
          }
        },
        "uniquenessConstraints": {
          "Encounters_pkey": [
            "ring_no",
            "visit_date"
          ]
        },
        "foreignRelations": {
          "Encounters_ring_no_fkey": {
            "foreignSchema": "public",
            "foreignTable": "Birds",
            "columnMapping": {
              "ring_no": "ring_no"
            }
          }
        },
        "description": "Encounters with individual birds"
      },
      "Species": {
        "schemaName": "public",
        "tableName": "Species",
        "columns": {
          "species_name": {
            "name": "species_name",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": null
          }
        },
        "uniquenessConstraints": {
          "Species_pkey": [
            "species_name"
          ]
        },
        "foreignRelations": {},
        "description": "Bird Species"
      },
      "auth_audit_log_entries": {
        "schemaName": "auth",
        "tableName": "audit_log_entries",
        "columns": {
          "created_at": {
            "name": "created_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": null
          },
          "id": {
            "name": "id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "instance_id": {
            "name": "instance_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nullable",
            "description": null
          },
          "ip_address": {
            "name": "ip_address",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": null
          },
          "payload": {
            "name": "payload",
            "type": {
              "scalarType": "json"
            },
            "nullable": "nullable",
            "description": null
          }
        },
        "uniquenessConstraints": {
          "audit_log_entries_pkey": [
            "id"
          ]
        },
        "foreignRelations": {},
        "description": "Auth: Audit trail for user actions."
      },
      "auth_flow_state": {
        "schemaName": "auth",
        "tableName": "flow_state",
        "columns": {
          "auth_code": {
            "name": "auth_code",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "auth_code_issued_at": {
            "name": "auth_code_issued_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": null
          },
          "authentication_method": {
            "name": "authentication_method",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "code_challenge": {
            "name": "code_challenge",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "code_challenge_method": {
            "name": "code_challenge_method",
            "type": {
              "scalarType": "auth_code_challenge_method"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "created_at": {
            "name": "created_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": null
          },
          "id": {
            "name": "id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "provider_access_token": {
            "name": "provider_access_token",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": null
          },
          "provider_refresh_token": {
            "name": "provider_refresh_token",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": null
          },
          "provider_type": {
            "name": "provider_type",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "updated_at": {
            "name": "updated_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": null
          },
          "user_id": {
            "name": "user_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nullable",
            "description": null
          }
        },
        "uniquenessConstraints": {
          "flow_state_pkey": [
            "id"
          ]
        },
        "foreignRelations": {},
        "description": "stores metadata for pkce logins"
      },
      "auth_identities": {
        "schemaName": "auth",
        "tableName": "identities",
        "columns": {
          "created_at": {
            "name": "created_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": null
          },
          "email": {
            "name": "email",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "hasDefault": "hasDefault",
            "isGenerated": "stored",
            "description": "Auth: Email is a generated column that references the optional email property in the identity_data"
          },
          "id": {
            "name": "id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": null
          },
          "identity_data": {
            "name": "identity_data",
            "type": {
              "scalarType": "jsonb"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "last_sign_in_at": {
            "name": "last_sign_in_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": null
          },
          "provider": {
            "name": "provider",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "provider_id": {
            "name": "provider_id",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "updated_at": {
            "name": "updated_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": null
          },
          "user_id": {
            "name": "user_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": null
          }
        },
        "uniquenessConstraints": {
          "identities_pkey": [
            "id"
          ],
          "identities_provider_id_provider_unique": [
            "provider",
            "provider_id"
          ]
        },
        "foreignRelations": {
          "identities_user_id_fkey": {
            "foreignSchema": "auth",
            "foreignTable": "users",
            "columnMapping": {
              "user_id": "id"
            }
          }
        },
        "description": "Auth: Stores identities associated to a user."
      },
      "auth_instances": {
        "schemaName": "auth",
        "tableName": "instances",
        "columns": {
          "created_at": {
            "name": "created_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": null
          },
          "id": {
            "name": "id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "raw_base_config": {
            "name": "raw_base_config",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": null
          },
          "updated_at": {
            "name": "updated_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": null
          },
          "uuid": {
            "name": "uuid",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nullable",
            "description": null
          }
        },
        "uniquenessConstraints": {
          "instances_pkey": [
            "id"
          ]
        },
        "foreignRelations": {},
        "description": "Auth: Manages users across multiple sites."
      },
      "auth_mfa_amr_claims": {
        "schemaName": "auth",
        "tableName": "mfa_amr_claims",
        "columns": {
          "authentication_method": {
            "name": "authentication_method",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "created_at": {
            "name": "created_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "id": {
            "name": "id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "session_id": {
            "name": "session_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "updated_at": {
            "name": "updated_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": null
          }
        },
        "uniquenessConstraints": {
          "amr_id_pk": [
            "id"
          ],
          "mfa_amr_claims_session_id_authentication_method_pkey": [
            "authentication_method",
            "session_id"
          ]
        },
        "foreignRelations": {
          "mfa_amr_claims_session_id_fkey": {
            "foreignSchema": "auth",
            "foreignTable": "sessions",
            "columnMapping": {
              "session_id": "id"
            }
          }
        },
        "description": "auth: stores authenticator method reference claims for multi factor authentication"
      },
      "auth_mfa_challenges": {
        "schemaName": "auth",
        "tableName": "mfa_challenges",
        "columns": {
          "created_at": {
            "name": "created_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "factor_id": {
            "name": "factor_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "id": {
            "name": "id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "ip_address": {
            "name": "ip_address",
            "type": {
              "scalarType": "inet"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "otp_code": {
            "name": "otp_code",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": null
          },
          "verified_at": {
            "name": "verified_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": null
          },
          "web_authn_session_data": {
            "name": "web_authn_session_data",
            "type": {
              "scalarType": "jsonb"
            },
            "nullable": "nullable",
            "description": null
          }
        },
        "uniquenessConstraints": {
          "mfa_challenges_pkey": [
            "id"
          ]
        },
        "foreignRelations": {
          "mfa_challenges_auth_factor_id_fkey": {
            "foreignSchema": "auth",
            "foreignTable": "mfa_factors",
            "columnMapping": {
              "factor_id": "id"
            }
          }
        },
        "description": "auth: stores metadata about challenge requests made"
      },
      "auth_mfa_factors": {
        "schemaName": "auth",
        "tableName": "mfa_factors",
        "columns": {
          "created_at": {
            "name": "created_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "factor_type": {
            "name": "factor_type",
            "type": {
              "scalarType": "auth_factor_type"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "friendly_name": {
            "name": "friendly_name",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": null
          },
          "id": {
            "name": "id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "last_challenged_at": {
            "name": "last_challenged_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": null
          },
          "phone": {
            "name": "phone",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": null
          },
          "secret": {
            "name": "secret",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": null
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "auth_factor_status"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "updated_at": {
            "name": "updated_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "user_id": {
            "name": "user_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "web_authn_aaguid": {
            "name": "web_authn_aaguid",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nullable",
            "description": null
          },
          "web_authn_credential": {
            "name": "web_authn_credential",
            "type": {
              "scalarType": "jsonb"
            },
            "nullable": "nullable",
            "description": null
          }
        },
        "uniquenessConstraints": {
          "mfa_factors_last_challenged_at_key": [
            "last_challenged_at"
          ],
          "mfa_factors_pkey": [
            "id"
          ]
        },
        "foreignRelations": {
          "mfa_factors_user_id_fkey": {
            "foreignSchema": "auth",
            "foreignTable": "users",
            "columnMapping": {
              "user_id": "id"
            }
          }
        },
        "description": "auth: stores metadata about factors"
      },
      "auth_oauth_authorizations": {
        "schemaName": "auth",
        "tableName": "oauth_authorizations",
        "columns": {
          "approved_at": {
            "name": "approved_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": null
          },
          "authorization_code": {
            "name": "authorization_code",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": null
          },
          "authorization_id": {
            "name": "authorization_id",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "client_id": {
            "name": "client_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "code_challenge": {
            "name": "code_challenge",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": null
          },
          "code_challenge_method": {
            "name": "code_challenge_method",
            "type": {
              "scalarType": "auth_code_challenge_method"
            },
            "nullable": "nullable",
            "description": null
          },
          "created_at": {
            "name": "created_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": null
          },
          "expires_at": {
            "name": "expires_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": null
          },
          "id": {
            "name": "id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "redirect_uri": {
            "name": "redirect_uri",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "resource": {
            "name": "resource",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": null
          },
          "response_type": {
            "name": "response_type",
            "type": {
              "scalarType": "auth_oauth_response_type"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": null
          },
          "scope": {
            "name": "scope",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "state": {
            "name": "state",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": null
          },
          "status": {
            "name": "status",
            "type": {
              "scalarType": "auth_oauth_authorization_status"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": null
          },
          "user_id": {
            "name": "user_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nullable",
            "description": null
          }
        },
        "uniquenessConstraints": {
          "oauth_authorizations_authorization_code_key": [
            "authorization_code"
          ],
          "oauth_authorizations_authorization_id_key": [
            "authorization_id"
          ],
          "oauth_authorizations_pkey": [
            "id"
          ]
        },
        "foreignRelations": {
          "oauth_authorizations_client_id_fkey": {
            "foreignSchema": "auth",
            "foreignTable": "oauth_clients",
            "columnMapping": {
              "client_id": "id"
            }
          },
          "oauth_authorizations_user_id_fkey": {
            "foreignSchema": "auth",
            "foreignTable": "users",
            "columnMapping": {
              "user_id": "id"
            }
          }
        },
        "description": null
      },
      "auth_oauth_clients": {
        "schemaName": "auth",
        "tableName": "oauth_clients",
        "columns": {
          "client_name": {
            "name": "client_name",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": null
          },
          "client_secret_hash": {
            "name": "client_secret_hash",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": null
          },
          "client_type": {
            "name": "client_type",
            "type": {
              "scalarType": "auth_oauth_client_type"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": null
          },
          "client_uri": {
            "name": "client_uri",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": null
          },
          "created_at": {
            "name": "created_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": null
          },
          "deleted_at": {
            "name": "deleted_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": null
          },
          "grant_types": {
            "name": "grant_types",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "id": {
            "name": "id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "logo_uri": {
            "name": "logo_uri",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": null
          },
          "redirect_uris": {
            "name": "redirect_uris",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "registration_type": {
            "name": "registration_type",
            "type": {
              "scalarType": "auth_oauth_registration_type"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "updated_at": {
            "name": "updated_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": null
          }
        },
        "uniquenessConstraints": {
          "oauth_clients_pkey": [
            "id"
          ]
        },
        "foreignRelations": {},
        "description": null
      },
      "auth_oauth_consents": {
        "schemaName": "auth",
        "tableName": "oauth_consents",
        "columns": {
          "client_id": {
            "name": "client_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "granted_at": {
            "name": "granted_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": null
          },
          "id": {
            "name": "id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "revoked_at": {
            "name": "revoked_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": null
          },
          "scopes": {
            "name": "scopes",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "user_id": {
            "name": "user_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": null
          }
        },
        "uniquenessConstraints": {
          "oauth_consents_pkey": [
            "id"
          ],
          "oauth_consents_user_client_unique": [
            "client_id",
            "user_id"
          ]
        },
        "foreignRelations": {
          "oauth_consents_client_id_fkey": {
            "foreignSchema": "auth",
            "foreignTable": "oauth_clients",
            "columnMapping": {
              "client_id": "id"
            }
          },
          "oauth_consents_user_id_fkey": {
            "foreignSchema": "auth",
            "foreignTable": "users",
            "columnMapping": {
              "user_id": "id"
            }
          }
        },
        "description": null
      },
      "auth_one_time_tokens": {
        "schemaName": "auth",
        "tableName": "one_time_tokens",
        "columns": {
          "created_at": {
            "name": "created_at",
            "type": {
              "scalarType": "timestamp"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": null
          },
          "id": {
            "name": "id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "relates_to": {
            "name": "relates_to",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "token_hash": {
            "name": "token_hash",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "token_type": {
            "name": "token_type",
            "type": {
              "scalarType": "auth_one_time_token_type"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "updated_at": {
            "name": "updated_at",
            "type": {
              "scalarType": "timestamp"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": null
          },
          "user_id": {
            "name": "user_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": null
          }
        },
        "uniquenessConstraints": {
          "one_time_tokens_pkey": [
            "id"
          ]
        },
        "foreignRelations": {
          "one_time_tokens_user_id_fkey": {
            "foreignSchema": "auth",
            "foreignTable": "users",
            "columnMapping": {
              "user_id": "id"
            }
          }
        },
        "description": null
      },
      "auth_refresh_tokens": {
        "schemaName": "auth",
        "tableName": "refresh_tokens",
        "columns": {
          "created_at": {
            "name": "created_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": null
          },
          "id": {
            "name": "id",
            "type": {
              "scalarType": "int8"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": null
          },
          "instance_id": {
            "name": "instance_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nullable",
            "description": null
          },
          "parent": {
            "name": "parent",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": null
          },
          "revoked": {
            "name": "revoked",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nullable",
            "description": null
          },
          "session_id": {
            "name": "session_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nullable",
            "description": null
          },
          "token": {
            "name": "token",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": null
          },
          "updated_at": {
            "name": "updated_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": null
          },
          "user_id": {
            "name": "user_id",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": null
          }
        },
        "uniquenessConstraints": {
          "refresh_tokens_pkey": [
            "id"
          ],
          "refresh_tokens_token_unique": [
            "token"
          ]
        },
        "foreignRelations": {
          "refresh_tokens_session_id_fkey": {
            "foreignSchema": "auth",
            "foreignTable": "sessions",
            "columnMapping": {
              "session_id": "id"
            }
          }
        },
        "description": "Auth: Store of tokens used to refresh JWT tokens once they expire."
      },
      "auth_saml_providers": {
        "schemaName": "auth",
        "tableName": "saml_providers",
        "columns": {
          "attribute_mapping": {
            "name": "attribute_mapping",
            "type": {
              "scalarType": "jsonb"
            },
            "nullable": "nullable",
            "description": null
          },
          "created_at": {
            "name": "created_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": null
          },
          "entity_id": {
            "name": "entity_id",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "id": {
            "name": "id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "metadata_url": {
            "name": "metadata_url",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": null
          },
          "metadata_xml": {
            "name": "metadata_xml",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "name_id_format": {
            "name": "name_id_format",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": null
          },
          "sso_provider_id": {
            "name": "sso_provider_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "updated_at": {
            "name": "updated_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": null
          }
        },
        "uniquenessConstraints": {
          "saml_providers_entity_id_key": [
            "entity_id"
          ],
          "saml_providers_pkey": [
            "id"
          ]
        },
        "foreignRelations": {
          "saml_providers_sso_provider_id_fkey": {
            "foreignSchema": "auth",
            "foreignTable": "sso_providers",
            "columnMapping": {
              "sso_provider_id": "id"
            }
          }
        },
        "description": "Auth: Manages SAML Identity Provider connections."
      },
      "auth_saml_relay_states": {
        "schemaName": "auth",
        "tableName": "saml_relay_states",
        "columns": {
          "created_at": {
            "name": "created_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": null
          },
          "flow_state_id": {
            "name": "flow_state_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nullable",
            "description": null
          },
          "for_email": {
            "name": "for_email",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": null
          },
          "id": {
            "name": "id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "redirect_to": {
            "name": "redirect_to",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": null
          },
          "request_id": {
            "name": "request_id",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "sso_provider_id": {
            "name": "sso_provider_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "updated_at": {
            "name": "updated_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": null
          }
        },
        "uniquenessConstraints": {
          "saml_relay_states_pkey": [
            "id"
          ]
        },
        "foreignRelations": {
          "saml_relay_states_flow_state_id_fkey": {
            "foreignSchema": "auth",
            "foreignTable": "flow_state",
            "columnMapping": {
              "flow_state_id": "id"
            }
          },
          "saml_relay_states_sso_provider_id_fkey": {
            "foreignSchema": "auth",
            "foreignTable": "sso_providers",
            "columnMapping": {
              "sso_provider_id": "id"
            }
          }
        },
        "description": "Auth: Contains SAML Relay State information for each Service Provider initiated login."
      },
      "auth_schema_migrations": {
        "schemaName": "auth",
        "tableName": "schema_migrations",
        "columns": {
          "version": {
            "name": "version",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": null
          }
        },
        "uniquenessConstraints": {
          "schema_migrations_pkey": [
            "version"
          ]
        },
        "foreignRelations": {},
        "description": "Auth: Manages updates to the auth system."
      },
      "auth_sessions": {
        "schemaName": "auth",
        "tableName": "sessions",
        "columns": {
          "aal": {
            "name": "aal",
            "type": {
              "scalarType": "auth_aal_level"
            },
            "nullable": "nullable",
            "description": null
          },
          "created_at": {
            "name": "created_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": null
          },
          "factor_id": {
            "name": "factor_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nullable",
            "description": null
          },
          "id": {
            "name": "id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "ip": {
            "name": "ip",
            "type": {
              "scalarType": "inet"
            },
            "nullable": "nullable",
            "description": null
          },
          "not_after": {
            "name": "not_after",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": "Auth: Not after is a nullable column that contains a timestamp after which the session should be regarded as expired."
          },
          "oauth_client_id": {
            "name": "oauth_client_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nullable",
            "description": null
          },
          "refreshed_at": {
            "name": "refreshed_at",
            "type": {
              "scalarType": "timestamp"
            },
            "nullable": "nullable",
            "description": null
          },
          "tag": {
            "name": "tag",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": null
          },
          "updated_at": {
            "name": "updated_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": null
          },
          "user_agent": {
            "name": "user_agent",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": null
          },
          "user_id": {
            "name": "user_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": null
          }
        },
        "uniquenessConstraints": {
          "sessions_pkey": [
            "id"
          ]
        },
        "foreignRelations": {
          "sessions_oauth_client_id_fkey": {
            "foreignSchema": "auth",
            "foreignTable": "oauth_clients",
            "columnMapping": {
              "oauth_client_id": "id"
            }
          },
          "sessions_user_id_fkey": {
            "foreignSchema": "auth",
            "foreignTable": "users",
            "columnMapping": {
              "user_id": "id"
            }
          }
        },
        "description": "Auth: Stores session data associated to a user."
      },
      "auth_sso_domains": {
        "schemaName": "auth",
        "tableName": "sso_domains",
        "columns": {
          "created_at": {
            "name": "created_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": null
          },
          "domain": {
            "name": "domain",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "id": {
            "name": "id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "sso_provider_id": {
            "name": "sso_provider_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "updated_at": {
            "name": "updated_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": null
          }
        },
        "uniquenessConstraints": {
          "sso_domains_pkey": [
            "id"
          ]
        },
        "foreignRelations": {
          "sso_domains_sso_provider_id_fkey": {
            "foreignSchema": "auth",
            "foreignTable": "sso_providers",
            "columnMapping": {
              "sso_provider_id": "id"
            }
          }
        },
        "description": "Auth: Manages SSO email address domain mapping to an SSO Identity Provider."
      },
      "auth_sso_providers": {
        "schemaName": "auth",
        "tableName": "sso_providers",
        "columns": {
          "created_at": {
            "name": "created_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": null
          },
          "disabled": {
            "name": "disabled",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nullable",
            "description": null
          },
          "id": {
            "name": "id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "resource_id": {
            "name": "resource_id",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": "Auth: Uniquely identifies a SSO provider according to a user-chosen resource ID (case insensitive), useful in infrastructure as code."
          },
          "updated_at": {
            "name": "updated_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": null
          }
        },
        "uniquenessConstraints": {
          "sso_providers_pkey": [
            "id"
          ]
        },
        "foreignRelations": {},
        "description": "Auth: Manages SSO identity provider information; see saml_providers for SAML."
      },
      "auth_users": {
        "schemaName": "auth",
        "tableName": "users",
        "columns": {
          "aud": {
            "name": "aud",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": null
          },
          "banned_until": {
            "name": "banned_until",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": null
          },
          "confirmation_sent_at": {
            "name": "confirmation_sent_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": null
          },
          "confirmation_token": {
            "name": "confirmation_token",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": null
          },
          "confirmed_at": {
            "name": "confirmed_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "hasDefault": "hasDefault",
            "isGenerated": "stored",
            "description": null
          },
          "created_at": {
            "name": "created_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": null
          },
          "deleted_at": {
            "name": "deleted_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": null
          },
          "email": {
            "name": "email",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": null
          },
          "email_change": {
            "name": "email_change",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": null
          },
          "email_change_confirm_status": {
            "name": "email_change_confirm_status",
            "type": {
              "scalarType": "int2"
            },
            "nullable": "nullable",
            "hasDefault": "hasDefault",
            "description": null
          },
          "email_change_sent_at": {
            "name": "email_change_sent_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": null
          },
          "email_change_token_current": {
            "name": "email_change_token_current",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "hasDefault": "hasDefault",
            "description": null
          },
          "email_change_token_new": {
            "name": "email_change_token_new",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": null
          },
          "email_confirmed_at": {
            "name": "email_confirmed_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": null
          },
          "encrypted_password": {
            "name": "encrypted_password",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": null
          },
          "id": {
            "name": "id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "instance_id": {
            "name": "instance_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nullable",
            "description": null
          },
          "invited_at": {
            "name": "invited_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": null
          },
          "is_anonymous": {
            "name": "is_anonymous",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": null
          },
          "is_sso_user": {
            "name": "is_sso_user",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": "Auth: Set this column to true when the account comes from SSO. These accounts can have duplicate emails."
          },
          "is_super_admin": {
            "name": "is_super_admin",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nullable",
            "description": null
          },
          "last_sign_in_at": {
            "name": "last_sign_in_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": null
          },
          "phone": {
            "name": "phone",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "hasDefault": "hasDefault",
            "description": null
          },
          "phone_change": {
            "name": "phone_change",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "hasDefault": "hasDefault",
            "description": null
          },
          "phone_change_sent_at": {
            "name": "phone_change_sent_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": null
          },
          "phone_change_token": {
            "name": "phone_change_token",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "hasDefault": "hasDefault",
            "description": null
          },
          "phone_confirmed_at": {
            "name": "phone_confirmed_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": null
          },
          "raw_app_meta_data": {
            "name": "raw_app_meta_data",
            "type": {
              "scalarType": "jsonb"
            },
            "nullable": "nullable",
            "description": null
          },
          "raw_user_meta_data": {
            "name": "raw_user_meta_data",
            "type": {
              "scalarType": "jsonb"
            },
            "nullable": "nullable",
            "description": null
          },
          "reauthentication_sent_at": {
            "name": "reauthentication_sent_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": null
          },
          "reauthentication_token": {
            "name": "reauthentication_token",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "hasDefault": "hasDefault",
            "description": null
          },
          "recovery_sent_at": {
            "name": "recovery_sent_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": null
          },
          "recovery_token": {
            "name": "recovery_token",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": null
          },
          "role": {
            "name": "role",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nullable",
            "description": null
          },
          "updated_at": {
            "name": "updated_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": null
          }
        },
        "uniquenessConstraints": {
          "users_phone_key": [
            "phone"
          ],
          "users_pkey": [
            "id"
          ]
        },
        "foreignRelations": {},
        "description": "Auth: Stores user login data within a secure schema."
      },
      "extensions_pg_stat_statements_info": {
        "schemaName": "extensions",
        "tableName": "pg_stat_statements_info",
        "columns": {
          "dealloc": {
            "name": "dealloc",
            "type": {
              "scalarType": "int8"
            },
            "nullable": "nullable",
            "description": null
          },
          "stats_reset": {
            "name": "stats_reset",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": null
          }
        },
        "uniquenessConstraints": {},
        "foreignRelations": {},
        "description": null
      },
      "realtime_messages": {
        "schemaName": "realtime",
        "tableName": "messages",
        "columns": {
          "event": {
            "name": "event",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": null
          },
          "extension": {
            "name": "extension",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "id": {
            "name": "id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": null
          },
          "inserted_at": {
            "name": "inserted_at",
            "type": {
              "scalarType": "timestamp"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": null
          },
          "payload": {
            "name": "payload",
            "type": {
              "scalarType": "jsonb"
            },
            "nullable": "nullable",
            "description": null
          },
          "private": {
            "name": "private",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nullable",
            "hasDefault": "hasDefault",
            "description": null
          },
          "topic": {
            "name": "topic",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "updated_at": {
            "name": "updated_at",
            "type": {
              "scalarType": "timestamp"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": null
          }
        },
        "uniquenessConstraints": {
          "messages_pkey": [
            "id",
            "inserted_at"
          ]
        },
        "foreignRelations": {},
        "description": null
      },
      "realtime_schema_migrations": {
        "schemaName": "realtime",
        "tableName": "schema_migrations",
        "columns": {
          "inserted_at": {
            "name": "inserted_at",
            "type": {
              "scalarType": "timestamp"
            },
            "nullable": "nullable",
            "description": null
          },
          "version": {
            "name": "version",
            "type": {
              "scalarType": "int8"
            },
            "nullable": "nonNullable",
            "description": null
          }
        },
        "uniquenessConstraints": {
          "schema_migrations_pkey": [
            "version"
          ]
        },
        "foreignRelations": {},
        "description": null
      },
      "species_league_table": {
        "schemaName": "public",
        "tableName": "species_league_table",
        "columns": {
          "encounters": {
            "name": "encounters",
            "type": {
              "scalarType": "int8"
            },
            "nullable": "nullable",
            "description": null
          },
          "frequent_flyer": {
            "name": "frequent_flyer",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": null
          },
          "heaviest": {
            "name": "heaviest",
            "type": {
              "scalarType": "float4"
            },
            "nullable": "nullable",
            "description": null
          },
          "individuals": {
            "name": "individuals",
            "type": {
              "scalarType": "int8"
            },
            "nullable": "nullable",
            "description": null
          },
          "lightest": {
            "name": "lightest",
            "type": {
              "scalarType": "float4"
            },
            "nullable": "nullable",
            "description": null
          },
          "longest_stay": {
            "name": "longest_stay",
            "type": {
              "scalarType": "numeric"
            },
            "nullable": "nullable",
            "description": null
          },
          "longest_winged": {
            "name": "longest_winged",
            "type": {
              "scalarType": "int2"
            },
            "nullable": "nullable",
            "description": null
          },
          "session_count": {
            "name": "session_count",
            "type": {
              "scalarType": "int8"
            },
            "nullable": "nullable",
            "description": null
          },
          "shortest_winged": {
            "name": "shortest_winged",
            "type": {
              "scalarType": "int2"
            },
            "nullable": "nullable",
            "description": null
          },
          "species_name": {
            "name": "species_name",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": null
          },
          "total_weight": {
            "name": "total_weight",
            "type": {
              "scalarType": "float4"
            },
            "nullable": "nullable",
            "description": null
          },
          "unluckiest": {
            "name": "unluckiest",
            "type": {
              "scalarType": "int8"
            },
            "nullable": "nullable",
            "description": null
          }
        },
        "uniquenessConstraints": {},
        "foreignRelations": {},
        "description": null
      },
      "storage_buckets": {
        "schemaName": "storage",
        "tableName": "buckets",
        "columns": {
          "allowed_mime_types": {
            "name": "allowed_mime_types",
            "type": {
              "arrayType": {
                "scalarType": "text"
              }
            },
            "nullable": "nullable",
            "description": null
          },
          "avif_autodetection": {
            "name": "avif_autodetection",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nullable",
            "hasDefault": "hasDefault",
            "description": null
          },
          "created_at": {
            "name": "created_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "hasDefault": "hasDefault",
            "description": null
          },
          "file_size_limit": {
            "name": "file_size_limit",
            "type": {
              "scalarType": "int8"
            },
            "nullable": "nullable",
            "description": null
          },
          "id": {
            "name": "id",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "name": {
            "name": "name",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "owner": {
            "name": "owner",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nullable",
            "description": "Field is deprecated, use owner_id instead"
          },
          "owner_id": {
            "name": "owner_id",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": null
          },
          "public": {
            "name": "public",
            "type": {
              "scalarType": "bool"
            },
            "nullable": "nullable",
            "hasDefault": "hasDefault",
            "description": null
          },
          "type": {
            "name": "type",
            "type": {
              "scalarType": "storage_buckettype"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": null
          },
          "updated_at": {
            "name": "updated_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "hasDefault": "hasDefault",
            "description": null
          }
        },
        "uniquenessConstraints": {
          "buckets_pkey": [
            "id"
          ]
        },
        "foreignRelations": {},
        "description": null
      },
      "storage_buckets_analytics": {
        "schemaName": "storage",
        "tableName": "buckets_analytics",
        "columns": {
          "created_at": {
            "name": "created_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": null
          },
          "format": {
            "name": "format",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": null
          },
          "id": {
            "name": "id",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "type": {
            "name": "type",
            "type": {
              "scalarType": "storage_buckettype"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": null
          },
          "updated_at": {
            "name": "updated_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": null
          }
        },
        "uniquenessConstraints": {
          "buckets_analytics_pkey": [
            "id"
          ]
        },
        "foreignRelations": {},
        "description": null
      },
      "storage_migrations": {
        "schemaName": "storage",
        "tableName": "migrations",
        "columns": {
          "executed_at": {
            "name": "executed_at",
            "type": {
              "scalarType": "timestamp"
            },
            "nullable": "nullable",
            "hasDefault": "hasDefault",
            "description": null
          },
          "hash": {
            "name": "hash",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "id": {
            "name": "id",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "name": {
            "name": "name",
            "type": {
              "scalarType": "varchar"
            },
            "nullable": "nonNullable",
            "description": null
          }
        },
        "uniquenessConstraints": {
          "migrations_name_key": [
            "name"
          ],
          "migrations_pkey": [
            "id"
          ]
        },
        "foreignRelations": {},
        "description": null
      },
      "storage_objects": {
        "schemaName": "storage",
        "tableName": "objects",
        "columns": {
          "bucket_id": {
            "name": "bucket_id",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": null
          },
          "created_at": {
            "name": "created_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "hasDefault": "hasDefault",
            "description": null
          },
          "id": {
            "name": "id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": null
          },
          "last_accessed_at": {
            "name": "last_accessed_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "hasDefault": "hasDefault",
            "description": null
          },
          "level": {
            "name": "level",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nullable",
            "description": null
          },
          "metadata": {
            "name": "metadata",
            "type": {
              "scalarType": "jsonb"
            },
            "nullable": "nullable",
            "description": null
          },
          "name": {
            "name": "name",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": null
          },
          "owner": {
            "name": "owner",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nullable",
            "description": "Field is deprecated, use owner_id instead"
          },
          "owner_id": {
            "name": "owner_id",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": null
          },
          "path_tokens": {
            "name": "path_tokens",
            "type": {
              "arrayType": {
                "scalarType": "text"
              }
            },
            "nullable": "nullable",
            "hasDefault": "hasDefault",
            "isGenerated": "stored",
            "description": null
          },
          "updated_at": {
            "name": "updated_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "hasDefault": "hasDefault",
            "description": null
          },
          "user_metadata": {
            "name": "user_metadata",
            "type": {
              "scalarType": "jsonb"
            },
            "nullable": "nullable",
            "description": null
          },
          "version": {
            "name": "version",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": null
          }
        },
        "uniquenessConstraints": {
          "objects_pkey": [
            "id"
          ]
        },
        "foreignRelations": {
          "objects_bucketId_fkey": {
            "foreignSchema": "storage",
            "foreignTable": "buckets",
            "columnMapping": {
              "bucket_id": "id"
            }
          }
        },
        "description": null
      },
      "storage_prefixes": {
        "schemaName": "storage",
        "tableName": "prefixes",
        "columns": {
          "bucket_id": {
            "name": "bucket_id",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "created_at": {
            "name": "created_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "hasDefault": "hasDefault",
            "description": null
          },
          "level": {
            "name": "level",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "isGenerated": "stored",
            "description": null
          },
          "name": {
            "name": "name",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "updated_at": {
            "name": "updated_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "hasDefault": "hasDefault",
            "description": null
          }
        },
        "uniquenessConstraints": {
          "prefixes_pkey": [
            "bucket_id",
            "level",
            "name"
          ]
        },
        "foreignRelations": {
          "prefixes_bucketId_fkey": {
            "foreignSchema": "storage",
            "foreignTable": "buckets",
            "columnMapping": {
              "bucket_id": "id"
            }
          }
        },
        "description": null
      },
      "storage_s3_multipart_uploads": {
        "schemaName": "storage",
        "tableName": "s3_multipart_uploads",
        "columns": {
          "bucket_id": {
            "name": "bucket_id",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "created_at": {
            "name": "created_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": null
          },
          "id": {
            "name": "id",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "in_progress_size": {
            "name": "in_progress_size",
            "type": {
              "scalarType": "int8"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": null
          },
          "key": {
            "name": "key",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "owner_id": {
            "name": "owner_id",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": null
          },
          "upload_signature": {
            "name": "upload_signature",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "user_metadata": {
            "name": "user_metadata",
            "type": {
              "scalarType": "jsonb"
            },
            "nullable": "nullable",
            "description": null
          },
          "version": {
            "name": "version",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": null
          }
        },
        "uniquenessConstraints": {
          "s3_multipart_uploads_pkey": [
            "id"
          ]
        },
        "foreignRelations": {
          "s3_multipart_uploads_bucket_id_fkey": {
            "foreignSchema": "storage",
            "foreignTable": "buckets",
            "columnMapping": {
              "bucket_id": "id"
            }
          }
        },
        "description": null
      },
      "storage_s3_multipart_uploads_parts": {
        "schemaName": "storage",
        "tableName": "s3_multipart_uploads_parts",
        "columns": {
          "bucket_id": {
            "name": "bucket_id",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "created_at": {
            "name": "created_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": null
          },
          "etag": {
            "name": "etag",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "id": {
            "name": "id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": null
          },
          "key": {
            "name": "key",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "owner_id": {
            "name": "owner_id",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": null
          },
          "part_number": {
            "name": "part_number",
            "type": {
              "scalarType": "int4"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "size": {
            "name": "size",
            "type": {
              "scalarType": "int8"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": null
          },
          "upload_id": {
            "name": "upload_id",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "version": {
            "name": "version",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": null
          }
        },
        "uniquenessConstraints": {
          "s3_multipart_uploads_parts_pkey": [
            "id"
          ]
        },
        "foreignRelations": {
          "s3_multipart_uploads_parts_bucket_id_fkey": {
            "foreignSchema": "storage",
            "foreignTable": "buckets",
            "columnMapping": {
              "bucket_id": "id"
            }
          },
          "s3_multipart_uploads_parts_upload_id_fkey": {
            "foreignSchema": "storage",
            "foreignTable": "s3_multipart_uploads",
            "columnMapping": {
              "upload_id": "id"
            }
          }
        },
        "description": null
      },
      "supabase_migrations_schema_migrations": {
        "schemaName": "supabase_migrations",
        "tableName": "schema_migrations",
        "columns": {
          "name": {
            "name": "name",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": null
          },
          "statements": {
            "name": "statements",
            "type": {
              "arrayType": {
                "scalarType": "text"
              }
            },
            "nullable": "nullable",
            "description": null
          },
          "version": {
            "name": "version",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": null
          }
        },
        "uniquenessConstraints": {
          "schema_migrations_pkey": [
            "version"
          ]
        },
        "foreignRelations": {},
        "description": null
      },
      "supabase_migrations_seed_files": {
        "schemaName": "supabase_migrations",
        "tableName": "seed_files",
        "columns": {
          "hash": {
            "name": "hash",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "path": {
            "name": "path",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": null
          }
        },
        "uniquenessConstraints": {
          "seed_files_pkey": [
            "path"
          ]
        },
        "foreignRelations": {},
        "description": null
      },
      "vault_decrypted_secrets": {
        "schemaName": "vault",
        "tableName": "decrypted_secrets",
        "columns": {
          "created_at": {
            "name": "created_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": null
          },
          "decrypted_secret": {
            "name": "decrypted_secret",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": null
          },
          "description": {
            "name": "description",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": null
          },
          "id": {
            "name": "id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nullable",
            "description": null
          },
          "key_id": {
            "name": "key_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nullable",
            "description": null
          },
          "name": {
            "name": "name",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": null
          },
          "nonce": {
            "name": "nonce",
            "type": {
              "scalarType": "bytea"
            },
            "nullable": "nullable",
            "description": null
          },
          "secret": {
            "name": "secret",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": null
          },
          "updated_at": {
            "name": "updated_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nullable",
            "description": null
          }
        },
        "uniquenessConstraints": {},
        "foreignRelations": {},
        "description": null
      },
      "vault_secrets": {
        "schemaName": "vault",
        "tableName": "secrets",
        "columns": {
          "created_at": {
            "name": "created_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": null
          },
          "description": {
            "name": "description",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": null
          },
          "id": {
            "name": "id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": null
          },
          "key_id": {
            "name": "key_id",
            "type": {
              "scalarType": "uuid"
            },
            "nullable": "nullable",
            "description": null
          },
          "name": {
            "name": "name",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nullable",
            "description": null
          },
          "nonce": {
            "name": "nonce",
            "type": {
              "scalarType": "bytea"
            },
            "nullable": "nullable",
            "hasDefault": "hasDefault",
            "description": null
          },
          "secret": {
            "name": "secret",
            "type": {
              "scalarType": "text"
            },
            "nullable": "nonNullable",
            "description": null
          },
          "updated_at": {
            "name": "updated_at",
            "type": {
              "scalarType": "timestamptz"
            },
            "nullable": "nonNullable",
            "hasDefault": "hasDefault",
            "description": null
          }
        },
        "uniquenessConstraints": {
          "secrets_pkey": [
            "id"
          ]
        },
        "foreignRelations": {},
        "description": "Table with encrypted `secret` column for storing sensitive information on disk."
      }
    },
    "types": {
      "scalar": {
        "auth_aal_level": {
          "typeName": "aal_level",
          "schemaName": "auth",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "auth_aal_level"
            },
            "min": {
              "returnType": "auth_aal_level"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "auth_aal_level",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "greaterThan",
              "argumentType": "auth_aal_level",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "greaterThanOrEqual",
              "argumentType": "auth_aal_level",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "auth_aal_level",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "lessThan",
              "argumentType": "auth_aal_level",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "lessThanOrEqual",
              "argumentType": "auth_aal_level",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "auth_aal_level",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "aal1",
              "aal2",
              "aal3"
            ]
          }
        },
        "auth_code_challenge_method": {
          "typeName": "code_challenge_method",
          "schemaName": "auth",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "auth_code_challenge_method"
            },
            "min": {
              "returnType": "auth_code_challenge_method"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "auth_code_challenge_method",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "greaterThan",
              "argumentType": "auth_code_challenge_method",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "greaterThanOrEqual",
              "argumentType": "auth_code_challenge_method",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "auth_code_challenge_method",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "lessThan",
              "argumentType": "auth_code_challenge_method",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "lessThanOrEqual",
              "argumentType": "auth_code_challenge_method",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "auth_code_challenge_method",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "s256",
              "plain"
            ]
          }
        },
        "auth_factor_status": {
          "typeName": "factor_status",
          "schemaName": "auth",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "auth_factor_status"
            },
            "min": {
              "returnType": "auth_factor_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "auth_factor_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "greaterThan",
              "argumentType": "auth_factor_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "greaterThanOrEqual",
              "argumentType": "auth_factor_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "auth_factor_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "lessThan",
              "argumentType": "auth_factor_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "lessThanOrEqual",
              "argumentType": "auth_factor_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "auth_factor_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "unverified",
              "verified"
            ]
          }
        },
        "auth_factor_type": {
          "typeName": "factor_type",
          "schemaName": "auth",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "auth_factor_type"
            },
            "min": {
              "returnType": "auth_factor_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "auth_factor_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "greaterThan",
              "argumentType": "auth_factor_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "greaterThanOrEqual",
              "argumentType": "auth_factor_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "auth_factor_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "lessThan",
              "argumentType": "auth_factor_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "lessThanOrEqual",
              "argumentType": "auth_factor_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "auth_factor_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "totp",
              "webauthn",
              "phone"
            ]
          }
        },
        "auth_oauth_authorization_status": {
          "typeName": "oauth_authorization_status",
          "schemaName": "auth",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "auth_oauth_authorization_status"
            },
            "min": {
              "returnType": "auth_oauth_authorization_status"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "auth_oauth_authorization_status",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "greaterThan",
              "argumentType": "auth_oauth_authorization_status",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "greaterThanOrEqual",
              "argumentType": "auth_oauth_authorization_status",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "auth_oauth_authorization_status",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "lessThan",
              "argumentType": "auth_oauth_authorization_status",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "lessThanOrEqual",
              "argumentType": "auth_oauth_authorization_status",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "auth_oauth_authorization_status",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "pending",
              "approved",
              "denied",
              "expired"
            ]
          }
        },
        "auth_oauth_client_type": {
          "typeName": "oauth_client_type",
          "schemaName": "auth",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "auth_oauth_client_type"
            },
            "min": {
              "returnType": "auth_oauth_client_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "auth_oauth_client_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "greaterThan",
              "argumentType": "auth_oauth_client_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "greaterThanOrEqual",
              "argumentType": "auth_oauth_client_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "auth_oauth_client_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "lessThan",
              "argumentType": "auth_oauth_client_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "lessThanOrEqual",
              "argumentType": "auth_oauth_client_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "auth_oauth_client_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "public",
              "confidential"
            ]
          }
        },
        "auth_oauth_registration_type": {
          "typeName": "oauth_registration_type",
          "schemaName": "auth",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "auth_oauth_registration_type"
            },
            "min": {
              "returnType": "auth_oauth_registration_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "auth_oauth_registration_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "greaterThan",
              "argumentType": "auth_oauth_registration_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "greaterThanOrEqual",
              "argumentType": "auth_oauth_registration_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "auth_oauth_registration_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "lessThan",
              "argumentType": "auth_oauth_registration_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "lessThanOrEqual",
              "argumentType": "auth_oauth_registration_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "auth_oauth_registration_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "dynamic",
              "manual"
            ]
          }
        },
        "auth_oauth_response_type": {
          "typeName": "oauth_response_type",
          "schemaName": "auth",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "auth_oauth_response_type"
            },
            "min": {
              "returnType": "auth_oauth_response_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "auth_oauth_response_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "greaterThan",
              "argumentType": "auth_oauth_response_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "greaterThanOrEqual",
              "argumentType": "auth_oauth_response_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "auth_oauth_response_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "lessThan",
              "argumentType": "auth_oauth_response_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "lessThanOrEqual",
              "argumentType": "auth_oauth_response_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "auth_oauth_response_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "code"
            ]
          }
        },
        "auth_one_time_token_type": {
          "typeName": "one_time_token_type",
          "schemaName": "auth",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "auth_one_time_token_type"
            },
            "min": {
              "returnType": "auth_one_time_token_type"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "auth_one_time_token_type",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "greaterThan",
              "argumentType": "auth_one_time_token_type",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "greaterThanOrEqual",
              "argumentType": "auth_one_time_token_type",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "auth_one_time_token_type",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "lessThan",
              "argumentType": "auth_one_time_token_type",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "lessThanOrEqual",
              "argumentType": "auth_one_time_token_type",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "auth_one_time_token_type",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "confirmation_token",
              "reauthentication_token",
              "recovery_token",
              "email_change_token_new",
              "email_change_token_current",
              "phone_change_token"
            ]
          }
        },
        "bool": {
          "typeName": "bool",
          "schemaName": "pg_catalog",
          "description": null,
          "aggregateFunctions": {
            "bool_and": {
              "returnType": "bool"
            },
            "bool_or": {
              "returnType": "bool"
            },
            "every": {
              "returnType": "bool"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "bool",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "greaterThan",
              "argumentType": "bool",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "greaterThanOrEqual",
              "argumentType": "bool",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "bool",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "lessThan",
              "argumentType": "bool",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "lessThanOrEqual",
              "argumentType": "bool",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "<>",
              "operatorKind": "custom",
              "argumentType": "bool",
              "isInfix": true
            }
          },
          "typeRepresentation": "boolean"
        },
        "bytea": {
          "typeName": "bytea",
          "schemaName": "pg_catalog",
          "description": null,
          "aggregateFunctions": {},
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "bytea",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "greaterThan",
              "argumentType": "bytea",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "greaterThanOrEqual",
              "argumentType": "bytea",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "bytea",
              "isInfix": true
            },
            "_like": {
              "operatorName": "~~",
              "operatorKind": "custom",
              "argumentType": "bytea",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "lessThan",
              "argumentType": "bytea",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "lessThanOrEqual",
              "argumentType": "bytea",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "<>",
              "operatorKind": "custom",
              "argumentType": "bytea",
              "isInfix": true
            },
            "_nlike": {
              "operatorName": "!~~",
              "operatorKind": "custom",
              "argumentType": "bytea",
              "isInfix": true
            }
          },
          "typeRepresentation": null
        },
        "date": {
          "typeName": "date",
          "schemaName": "pg_catalog",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "date"
            },
            "min": {
              "returnType": "date"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "date",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "greaterThan",
              "argumentType": "date",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "greaterThanOrEqual",
              "argumentType": "date",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "date",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "lessThan",
              "argumentType": "date",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "lessThanOrEqual",
              "argumentType": "date",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "<>",
              "operatorKind": "custom",
              "argumentType": "date",
              "isInfix": true
            }
          },
          "typeRepresentation": "date"
        },
        "float4": {
          "typeName": "float4",
          "schemaName": "pg_catalog",
          "description": null,
          "aggregateFunctions": {
            "avg": {
              "returnType": "float8"
            },
            "max": {
              "returnType": "float4"
            },
            "min": {
              "returnType": "float4"
            },
            "stddev": {
              "returnType": "float8"
            },
            "stddev_pop": {
              "returnType": "float8"
            },
            "stddev_samp": {
              "returnType": "float8"
            },
            "sum": {
              "returnType": "float4"
            },
            "var_pop": {
              "returnType": "float8"
            },
            "var_samp": {
              "returnType": "float8"
            },
            "variance": {
              "returnType": "float8"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "float4",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "greaterThan",
              "argumentType": "float4",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "greaterThanOrEqual",
              "argumentType": "float4",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "float4",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "lessThan",
              "argumentType": "float4",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "lessThanOrEqual",
              "argumentType": "float4",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "<>",
              "operatorKind": "custom",
              "argumentType": "float4",
              "isInfix": true
            }
          },
          "typeRepresentation": "float32"
        },
        "float8": {
          "typeName": "float8",
          "schemaName": "pg_catalog",
          "description": null,
          "aggregateFunctions": {
            "avg": {
              "returnType": "float8"
            },
            "max": {
              "returnType": "float8"
            },
            "min": {
              "returnType": "float8"
            },
            "stddev": {
              "returnType": "float8"
            },
            "stddev_pop": {
              "returnType": "float8"
            },
            "stddev_samp": {
              "returnType": "float8"
            },
            "sum": {
              "returnType": "float8"
            },
            "var_pop": {
              "returnType": "float8"
            },
            "var_samp": {
              "returnType": "float8"
            },
            "variance": {
              "returnType": "float8"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "float8",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "greaterThan",
              "argumentType": "float8",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "greaterThanOrEqual",
              "argumentType": "float8",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "float8",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "lessThan",
              "argumentType": "float8",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "lessThanOrEqual",
              "argumentType": "float8",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "<>",
              "operatorKind": "custom",
              "argumentType": "float8",
              "isInfix": true
            }
          },
          "typeRepresentation": "float64"
        },
        "inet": {
          "typeName": "inet",
          "schemaName": "pg_catalog",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "inet"
            },
            "min": {
              "returnType": "inet"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "inet",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "greaterThan",
              "argumentType": "inet",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "greaterThanOrEqual",
              "argumentType": "inet",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "inet",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "lessThan",
              "argumentType": "inet",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "lessThanOrEqual",
              "argumentType": "inet",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "<>",
              "operatorKind": "custom",
              "argumentType": "inet",
              "isInfix": true
            },
            "inet_same_family": {
              "operatorName": "inet_same_family",
              "operatorKind": "custom",
              "argumentType": "inet",
              "isInfix": false
            },
            "network_overlap": {
              "operatorName": "network_overlap",
              "operatorKind": "custom",
              "argumentType": "inet",
              "isInfix": false
            },
            "network_sub": {
              "operatorName": "network_sub",
              "operatorKind": "custom",
              "argumentType": "inet",
              "isInfix": false
            },
            "network_subeq": {
              "operatorName": "network_subeq",
              "operatorKind": "custom",
              "argumentType": "inet",
              "isInfix": false
            },
            "network_sup": {
              "operatorName": "network_sup",
              "operatorKind": "custom",
              "argumentType": "inet",
              "isInfix": false
            },
            "network_supeq": {
              "operatorName": "network_supeq",
              "operatorKind": "custom",
              "argumentType": "inet",
              "isInfix": false
            }
          },
          "typeRepresentation": null
        },
        "int2": {
          "typeName": "int2",
          "schemaName": "pg_catalog",
          "description": null,
          "aggregateFunctions": {
            "avg": {
              "returnType": "numeric"
            },
            "bit_and": {
              "returnType": "int2"
            },
            "bit_or": {
              "returnType": "int2"
            },
            "bit_xor": {
              "returnType": "int2"
            },
            "max": {
              "returnType": "int2"
            },
            "min": {
              "returnType": "int2"
            },
            "stddev": {
              "returnType": "numeric"
            },
            "stddev_pop": {
              "returnType": "numeric"
            },
            "stddev_samp": {
              "returnType": "numeric"
            },
            "sum": {
              "returnType": "int8"
            },
            "var_pop": {
              "returnType": "numeric"
            },
            "var_samp": {
              "returnType": "numeric"
            },
            "variance": {
              "returnType": "numeric"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "int2",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "greaterThan",
              "argumentType": "int2",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "greaterThanOrEqual",
              "argumentType": "int2",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "int2",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "lessThan",
              "argumentType": "int2",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "lessThanOrEqual",
              "argumentType": "int2",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "<>",
              "operatorKind": "custom",
              "argumentType": "int2",
              "isInfix": true
            }
          },
          "typeRepresentation": "int16"
        },
        "int4": {
          "typeName": "int4",
          "schemaName": "pg_catalog",
          "description": null,
          "aggregateFunctions": {
            "avg": {
              "returnType": "numeric"
            },
            "bit_and": {
              "returnType": "int4"
            },
            "bit_or": {
              "returnType": "int4"
            },
            "bit_xor": {
              "returnType": "int4"
            },
            "max": {
              "returnType": "int4"
            },
            "min": {
              "returnType": "int4"
            },
            "stddev": {
              "returnType": "numeric"
            },
            "stddev_pop": {
              "returnType": "numeric"
            },
            "stddev_samp": {
              "returnType": "numeric"
            },
            "sum": {
              "returnType": "int8"
            },
            "var_pop": {
              "returnType": "numeric"
            },
            "var_samp": {
              "returnType": "numeric"
            },
            "variance": {
              "returnType": "numeric"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "int4",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "greaterThan",
              "argumentType": "int4",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "greaterThanOrEqual",
              "argumentType": "int4",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "int4",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "lessThan",
              "argumentType": "int4",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "lessThanOrEqual",
              "argumentType": "int4",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "<>",
              "operatorKind": "custom",
              "argumentType": "int4",
              "isInfix": true
            }
          },
          "typeRepresentation": "int32"
        },
        "int8": {
          "typeName": "int8",
          "schemaName": "pg_catalog",
          "description": null,
          "aggregateFunctions": {
            "avg": {
              "returnType": "numeric"
            },
            "bit_and": {
              "returnType": "int8"
            },
            "bit_or": {
              "returnType": "int8"
            },
            "bit_xor": {
              "returnType": "int8"
            },
            "max": {
              "returnType": "int8"
            },
            "min": {
              "returnType": "int8"
            },
            "stddev": {
              "returnType": "numeric"
            },
            "stddev_pop": {
              "returnType": "numeric"
            },
            "stddev_samp": {
              "returnType": "numeric"
            },
            "sum": {
              "returnType": "numeric"
            },
            "var_pop": {
              "returnType": "numeric"
            },
            "var_samp": {
              "returnType": "numeric"
            },
            "variance": {
              "returnType": "numeric"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "int8",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "greaterThan",
              "argumentType": "int8",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "greaterThanOrEqual",
              "argumentType": "int8",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "int8",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "lessThan",
              "argumentType": "int8",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "lessThanOrEqual",
              "argumentType": "int8",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "<>",
              "operatorKind": "custom",
              "argumentType": "int8",
              "isInfix": true
            }
          },
          "typeRepresentation": "int64AsString"
        },
        "interval": {
          "typeName": "interval",
          "schemaName": "pg_catalog",
          "description": null,
          "aggregateFunctions": {
            "avg": {
              "returnType": "interval"
            },
            "max": {
              "returnType": "interval"
            },
            "min": {
              "returnType": "interval"
            },
            "sum": {
              "returnType": "interval"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "interval",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "greaterThan",
              "argumentType": "interval",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "greaterThanOrEqual",
              "argumentType": "interval",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "interval",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "lessThan",
              "argumentType": "interval",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "lessThanOrEqual",
              "argumentType": "interval",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "<>",
              "operatorKind": "custom",
              "argumentType": "interval",
              "isInfix": true
            }
          },
          "typeRepresentation": null
        },
        "json": {
          "typeName": "json",
          "schemaName": "pg_catalog",
          "description": null,
          "aggregateFunctions": {},
          "comparisonOperators": {
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "json",
              "isInfix": true
            }
          },
          "typeRepresentation": null
        },
        "jsonb": {
          "typeName": "jsonb",
          "schemaName": "pg_catalog",
          "description": null,
          "aggregateFunctions": {},
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "jsonb",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "greaterThan",
              "argumentType": "jsonb",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "greaterThanOrEqual",
              "argumentType": "jsonb",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "jsonb",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "lessThan",
              "argumentType": "jsonb",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "lessThanOrEqual",
              "argumentType": "jsonb",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "<>",
              "operatorKind": "custom",
              "argumentType": "jsonb",
              "isInfix": true
            },
            "jsonb_contained": {
              "operatorName": "jsonb_contained",
              "operatorKind": "custom",
              "argumentType": "jsonb",
              "isInfix": false
            },
            "jsonb_contains": {
              "operatorName": "jsonb_contains",
              "operatorKind": "custom",
              "argumentType": "jsonb",
              "isInfix": false
            },
            "jsonb_exists": {
              "operatorName": "jsonb_exists",
              "operatorKind": "custom",
              "argumentType": "text",
              "isInfix": false
            }
          },
          "typeRepresentation": null
        },
        "numeric": {
          "typeName": "numeric",
          "schemaName": "pg_catalog",
          "description": null,
          "aggregateFunctions": {
            "avg": {
              "returnType": "numeric"
            },
            "max": {
              "returnType": "numeric"
            },
            "min": {
              "returnType": "numeric"
            },
            "stddev": {
              "returnType": "numeric"
            },
            "stddev_pop": {
              "returnType": "numeric"
            },
            "stddev_samp": {
              "returnType": "numeric"
            },
            "sum": {
              "returnType": "numeric"
            },
            "var_pop": {
              "returnType": "numeric"
            },
            "var_samp": {
              "returnType": "numeric"
            },
            "variance": {
              "returnType": "numeric"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "numeric",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "greaterThan",
              "argumentType": "numeric",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "greaterThanOrEqual",
              "argumentType": "numeric",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "numeric",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "lessThan",
              "argumentType": "numeric",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "lessThanOrEqual",
              "argumentType": "numeric",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "<>",
              "operatorKind": "custom",
              "argumentType": "numeric",
              "isInfix": true
            }
          },
          "typeRepresentation": "bigDecimalAsString"
        },
        "realtime_equality_op": {
          "typeName": "equality_op",
          "schemaName": "realtime",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "realtime_equality_op"
            },
            "min": {
              "returnType": "realtime_equality_op"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "realtime_equality_op",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "greaterThan",
              "argumentType": "realtime_equality_op",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "greaterThanOrEqual",
              "argumentType": "realtime_equality_op",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "realtime_equality_op",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "lessThan",
              "argumentType": "realtime_equality_op",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "lessThanOrEqual",
              "argumentType": "realtime_equality_op",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "realtime_equality_op",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "eq",
              "neq",
              "lt",
              "lte",
              "gt",
              "gte",
              "in"
            ]
          }
        },
        "storage_buckettype": {
          "typeName": "buckettype",
          "schemaName": "storage",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "storage_buckettype"
            },
            "min": {
              "returnType": "storage_buckettype"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "storage_buckettype",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "greaterThan",
              "argumentType": "storage_buckettype",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "greaterThanOrEqual",
              "argumentType": "storage_buckettype",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "storage_buckettype",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "lessThan",
              "argumentType": "storage_buckettype",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "lessThanOrEqual",
              "argumentType": "storage_buckettype",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "!=",
              "operatorKind": "custom",
              "argumentType": "storage_buckettype",
              "isInfix": true
            }
          },
          "typeRepresentation": {
            "enum": [
              "STANDARD",
              "ANALYTICS"
            ]
          }
        },
        "text": {
          "typeName": "text",
          "schemaName": "pg_catalog",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "text"
            },
            "min": {
              "returnType": "text"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "text",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "greaterThan",
              "argumentType": "text",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "greaterThanOrEqual",
              "argumentType": "text",
              "isInfix": true
            },
            "_ilike": {
              "operatorName": "~~*",
              "operatorKind": "custom",
              "argumentType": "text",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "text",
              "isInfix": true
            },
            "_iregex": {
              "operatorName": "~*",
              "operatorKind": "custom",
              "argumentType": "text",
              "isInfix": true
            },
            "_like": {
              "operatorName": "~~",
              "operatorKind": "custom",
              "argumentType": "text",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "lessThan",
              "argumentType": "text",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "lessThanOrEqual",
              "argumentType": "text",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "<>",
              "operatorKind": "custom",
              "argumentType": "text",
              "isInfix": true
            },
            "_nilike": {
              "operatorName": "!~~*",
              "operatorKind": "custom",
              "argumentType": "text",
              "isInfix": true
            },
            "_niregex": {
              "operatorName": "!~*",
              "operatorKind": "custom",
              "argumentType": "text",
              "isInfix": true
            },
            "_nlike": {
              "operatorName": "!~~",
              "operatorKind": "custom",
              "argumentType": "text",
              "isInfix": true
            },
            "_nregex": {
              "operatorName": "!~",
              "operatorKind": "custom",
              "argumentType": "text",
              "isInfix": true
            },
            "_regex": {
              "operatorName": "~",
              "operatorKind": "custom",
              "argumentType": "text",
              "isInfix": true
            },
            "starts_with": {
              "operatorName": "starts_with",
              "operatorKind": "custom",
              "argumentType": "text",
              "isInfix": false
            },
            "ts_match_tt": {
              "operatorName": "ts_match_tt",
              "operatorKind": "custom",
              "argumentType": "text",
              "isInfix": false
            }
          },
          "typeRepresentation": "string"
        },
        "time": {
          "typeName": "time",
          "schemaName": "pg_catalog",
          "description": null,
          "aggregateFunctions": {
            "avg": {
              "returnType": "interval"
            },
            "max": {
              "returnType": "time"
            },
            "min": {
              "returnType": "time"
            },
            "sum": {
              "returnType": "interval"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "time",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "greaterThan",
              "argumentType": "time",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "greaterThanOrEqual",
              "argumentType": "time",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "time",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "lessThan",
              "argumentType": "time",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "lessThanOrEqual",
              "argumentType": "time",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "<>",
              "operatorKind": "custom",
              "argumentType": "time",
              "isInfix": true
            }
          },
          "typeRepresentation": "time"
        },
        "timestamp": {
          "typeName": "timestamp",
          "schemaName": "pg_catalog",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "timestamp"
            },
            "min": {
              "returnType": "timestamp"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "timestamp",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "greaterThan",
              "argumentType": "timestamp",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "greaterThanOrEqual",
              "argumentType": "timestamp",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "timestamp",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "lessThan",
              "argumentType": "timestamp",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "lessThanOrEqual",
              "argumentType": "timestamp",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "<>",
              "operatorKind": "custom",
              "argumentType": "timestamp",
              "isInfix": true
            }
          },
          "typeRepresentation": "timestamp"
        },
        "timestamptz": {
          "typeName": "timestamptz",
          "schemaName": "pg_catalog",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "timestamptz"
            },
            "min": {
              "returnType": "timestamptz"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "timestamptz",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "greaterThan",
              "argumentType": "timestamptz",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "greaterThanOrEqual",
              "argumentType": "timestamptz",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "timestamptz",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "lessThan",
              "argumentType": "timestamptz",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "lessThanOrEqual",
              "argumentType": "timestamptz",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "<>",
              "operatorKind": "custom",
              "argumentType": "timestamptz",
              "isInfix": true
            }
          },
          "typeRepresentation": "timestamptz"
        },
        "uuid": {
          "typeName": "uuid",
          "schemaName": "pg_catalog",
          "description": null,
          "aggregateFunctions": {},
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "uuid",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "greaterThan",
              "argumentType": "uuid",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "greaterThanOrEqual",
              "argumentType": "uuid",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "uuid",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "lessThan",
              "argumentType": "uuid",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "lessThanOrEqual",
              "argumentType": "uuid",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "<>",
              "operatorKind": "custom",
              "argumentType": "uuid",
              "isInfix": true
            }
          },
          "typeRepresentation": "uUID"
        },
        "varchar": {
          "typeName": "varchar",
          "schemaName": "pg_catalog",
          "description": null,
          "aggregateFunctions": {
            "max": {
              "returnType": "text"
            },
            "min": {
              "returnType": "text"
            }
          },
          "comparisonOperators": {
            "_eq": {
              "operatorName": "=",
              "operatorKind": "equal",
              "argumentType": "varchar",
              "isInfix": true
            },
            "_gt": {
              "operatorName": ">",
              "operatorKind": "greaterThan",
              "argumentType": "varchar",
              "isInfix": true
            },
            "_gte": {
              "operatorName": ">=",
              "operatorKind": "greaterThanOrEqual",
              "argumentType": "varchar",
              "isInfix": true
            },
            "_ilike": {
              "operatorName": "~~*",
              "operatorKind": "custom",
              "argumentType": "varchar",
              "isInfix": true
            },
            "_in": {
              "operatorName": "IN",
              "operatorKind": "in",
              "argumentType": "varchar",
              "isInfix": true
            },
            "_iregex": {
              "operatorName": "~*",
              "operatorKind": "custom",
              "argumentType": "varchar",
              "isInfix": true
            },
            "_like": {
              "operatorName": "~~",
              "operatorKind": "custom",
              "argumentType": "varchar",
              "isInfix": true
            },
            "_lt": {
              "operatorName": "<",
              "operatorKind": "lessThan",
              "argumentType": "varchar",
              "isInfix": true
            },
            "_lte": {
              "operatorName": "<=",
              "operatorKind": "lessThanOrEqual",
              "argumentType": "varchar",
              "isInfix": true
            },
            "_neq": {
              "operatorName": "<>",
              "operatorKind": "custom",
              "argumentType": "varchar",
              "isInfix": true
            },
            "_nilike": {
              "operatorName": "!~~*",
              "operatorKind": "custom",
              "argumentType": "varchar",
              "isInfix": true
            },
            "_niregex": {
              "operatorName": "!~*",
              "operatorKind": "custom",
              "argumentType": "varchar",
              "isInfix": true
            },
            "_nlike": {
              "operatorName": "!~~",
              "operatorKind": "custom",
              "argumentType": "varchar",
              "isInfix": true
            },
            "_nregex": {
              "operatorName": "!~",
              "operatorKind": "custom",
              "argumentType": "varchar",
              "isInfix": true
            },
            "_regex": {
              "operatorName": "~",
              "operatorKind": "custom",
              "argumentType": "varchar",
              "isInfix": true
            },
            "starts_with": {
              "operatorName": "starts_with",
              "operatorKind": "custom",
              "argumentType": "varchar",
              "isInfix": false
            },
            "ts_match_tt": {
              "operatorName": "ts_match_tt",
              "operatorKind": "custom",
              "argumentType": "varchar",
              "isInfix": false
            }
          },
          "typeRepresentation": "string"
        }
      },
      "composite": {
        "realtime_user_defined_filter": {
          "typeName": "user_defined_filter",
          "schemaName": "realtime",
          "fields": {
            "column_name": {
              "fieldName": "column_name",
              "type": {
                "scalarType": "text"
              },
              "description": null
            },
            "op": {
              "fieldName": "op",
              "type": {
                "scalarType": "realtime_equality_op"
              },
              "description": null
            },
            "value": {
              "fieldName": "value",
              "type": {
                "scalarType": "text"
              },
              "description": null
            }
          },
          "description": null
        }
      }
    },
    "nativeOperations": {
      "queries": {},
      "mutations": {}
    }
  },
  "introspectionOptions": {
    "excludedSchemas": [
      "information_schema",
      "pg_catalog",
      "tiger",
      "crdb_internal",
      "columnar",
      "columnar_internal",
      "_timescaledb_catalog",
      "_timescaledb_functions",
      "_timescaledb_internal",
      "_timescaledb_cache",
      "_timescaledb_config",
      "timescaledb_experimental",
      "timescaledb_information",
      "_timescaledb_debug"
    ],
    "unqualifiedSchemasForTables": [
      "public"
    ],
    "unqualifiedSchemasForTypesAndProcedures": [
      "public",
      "pg_catalog",
      "tiger"
    ],
    "comparisonOperatorMapping": [
      {
        "operatorName": "=",
        "exposedName": "_eq",
        "operatorKind": "equal"
      },
      {
        "operatorName": "<=",
        "exposedName": "_lte",
        "operatorKind": "lessThanOrEqual"
      },
      {
        "operatorName": ">",
        "exposedName": "_gt",
        "operatorKind": "greaterThan"
      },
      {
        "operatorName": ">=",
        "exposedName": "_gte",
        "operatorKind": "greaterThanOrEqual"
      },
      {
        "operatorName": "<",
        "exposedName": "_lt",
        "operatorKind": "lessThan"
      },
      {
        "operatorName": "<>",
        "exposedName": "_neq",
        "operatorKind": "custom"
      },
      {
        "operatorName": "!=",
        "exposedName": "_neq",
        "operatorKind": "custom"
      },
      {
        "operatorName": "LIKE",
        "exposedName": "_like",
        "operatorKind": "custom"
      },
      {
        "operatorName": "NOT LIKE",
        "exposedName": "_nlike",
        "operatorKind": "custom"
      },
      {
        "operatorName": "ILIKE",
        "exposedName": "_ilike",
        "operatorKind": "custom"
      },
      {
        "operatorName": "NOT ILIKE",
        "exposedName": "_nilike",
        "operatorKind": "custom"
      },
      {
        "operatorName": "SIMILAR TO",
        "exposedName": "_similar",
        "operatorKind": "custom"
      },
      {
        "operatorName": "NOT SIMILAR TO",
        "exposedName": "_nsimilar",
        "operatorKind": "custom"
      },
      {
        "operatorName": "~~",
        "exposedName": "_like",
        "operatorKind": "custom"
      },
      {
        "operatorName": "!~~",
        "exposedName": "_nlike",
        "operatorKind": "custom"
      },
      {
        "operatorName": "~~*",
        "exposedName": "_ilike",
        "operatorKind": "custom"
      },
      {
        "operatorName": "!~~*",
        "exposedName": "_nilike",
        "operatorKind": "custom"
      },
      {
        "operatorName": "~",
        "exposedName": "_regex",
        "operatorKind": "custom"
      },
      {
        "operatorName": "!~",
        "exposedName": "_nregex",
        "operatorKind": "custom"
      },
      {
        "operatorName": "~*",
        "exposedName": "_iregex",
        "operatorKind": "custom"
      },
      {
        "operatorName": "!~*",
        "exposedName": "_niregex",
        "operatorKind": "custom"
      }
    ],
    "introspectPrefixFunctionComparisonOperators": [
      "box_above",
      "box_below",
      "box_contain",
      "box_contain_pt",
      "box_contained",
      "box_left",
      "box_overabove",
      "box_overbelow",
      "box_overlap",
      "box_overleft",
      "box_overright",
      "box_right",
      "box_same",
      "circle_above",
      "circle_below",
      "circle_contain",
      "circle_contain_pt",
      "circle_contained",
      "circle_left",
      "circle_overabove",
      "circle_overbelow",
      "circle_overlap",
      "circle_overleft",
      "circle_overright",
      "circle_right",
      "circle_same",
      "contains_2d",
      "equals",
      "geography_overlaps",
      "geometry_above",
      "geometry_below",
      "geometry_contained_3d",
      "geometry_contains",
      "geometry_contains_3d",
      "geometry_contains_nd",
      "geometry_left",
      "geometry_overabove",
      "geometry_overbelow",
      "geometry_overlaps",
      "geometry_overlaps_3d",
      "geometry_overlaps_nd",
      "geometry_overleft",
      "geometry_overright",
      "geometry_right",
      "geometry_same",
      "geometry_same_3d",
      "geometry_same_nd",
      "geometry_within",
      "geometry_within_nd",
      "inet_same_family",
      "inter_lb",
      "inter_sb",
      "inter_sl",
      "is_contained_2d",
      "ishorizontal",
      "isparallel",
      "isperp",
      "isvertical",
      "jsonb_contained",
      "jsonb_contains",
      "jsonb_exists",
      "jsonb_path_exists_opr",
      "jsonb_path_match_opr",
      "line_intersect",
      "line_parallel",
      "line_perp",
      "lseg_intersect",
      "lseg_parallel",
      "lseg_perp",
      "network_overlap",
      "network_sub",
      "network_subeq",
      "network_sup",
      "network_supeq",
      "on_pb",
      "on_pl",
      "on_ppath",
      "on_ps",
      "on_sb",
      "on_sl",
      "overlaps_2d",
      "path_contain_pt",
      "path_inter",
      "point_above",
      "point_below",
      "point_horiz",
      "point_left",
      "point_right",
      "point_vert",
      "poly_above",
      "poly_below",
      "poly_contain",
      "poly_contain_pt",
      "poly_contained",
      "poly_left",
      "poly_overabove",
      "poly_overbelow",
      "poly_overlap",
      "poly_overleft",
      "poly_overright",
      "poly_right",
      "poly_same",
      "pt_contained_poly",
      "st_3dintersects",
      "st_contains",
      "st_containsproperly",
      "st_coveredby",
      "st_covers",
      "st_crosses",
      "st_disjoint",
      "st_equals",
      "st_intersects",
      "st_isvalid",
      "st_orderingequals",
      "st_overlaps",
      "st_relatematch",
      "st_touches",
      "st_within",
      "starts_with",
      "ts_match_qv",
      "ts_match_tq",
      "ts_match_tt",
      "ts_match_vq",
      "tsq_mcontained",
      "tsq_mcontains",
      "xmlexists",
      "xmlvalidate",
      "xpath_exists"
    ],
    "typeRepresentations": {
      "bit": "string",
      "bool": "boolean",
      "bpchar": "string",
      "char": "string",
      "date": "date",
      "float4": "float32",
      "float8": "float64",
      "int2": "int16",
      "int4": "int32",
      "int8": "int64AsString",
      "numeric": "bigDecimalAsString",
      "text": "string",
      "time": "time",
      "timestamp": "timestamp",
      "timestamptz": "timestamptz",
      "timetz": "timetz",
      "uuid": "uUID",
      "varchar": "string"
    }
  },
  "mutationsVersion": "v2",
  "mutationsPrefix": ""
}
